// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../server/database.sqlite"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("user")
  model     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  passwordResetTokens PasswordResetToken[]
  comments           Comment[]
  history            History[]
}

model Model {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  code        String   @unique
  description String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model TreeNode {
  id          Int      @id @default(autoincrement())
  name        String
  type        String   // 'assembly', 'part'
  parentId    Int?
  model       String
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  parent   TreeNode?  @relation("TreeNodeToTreeNode", fields: [parentId], references: [id], onDelete: Cascade)
  children TreeNode[] @relation("TreeNodeToTreeNode")
}

model ChecklistItem {
  id          Int      @id @default(autoincrement())
  text        String
  author      String
  dueDate     DateTime?
  category    String?
  priority    String?
  model       String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  attachments Attachment[]
  comments    Comment[]
  history     History[]
}

model Attachment {
  id             Int           @id @default(autoincrement())
  filename       String
  originalName   String
  mimeType       String
  size           Int
  checklistItem  ChecklistItem @relation(fields: [checklistItemId], references: [id], onDelete: Cascade)
  checklistItemId Int
  createdAt      DateTime      @default(now())
}

model Comment {
  id             Int           @id @default(autoincrement())
  text           String
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  checklistItem  ChecklistItem @relation(fields: [checklistItemId], references: [id], onDelete: Cascade)
  checklistItemId Int
  createdAt      DateTime      @default(now())
}

model History {
  id             Int           @id @default(autoincrement())
  action         String
  details        String?
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  checklistItem  ChecklistItem @relation(fields: [checklistItemId], references: [id], onDelete: Cascade)
  checklistItemId Int
  createdAt      DateTime      @default(now())
}

model Option {
  id          Int      @id @default(autoincrement())
  name        String
  value       String
  category    String
  model       String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
